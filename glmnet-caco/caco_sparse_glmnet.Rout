
R version 4.4.1 (2024-06-14) -- "Race for Your Life"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(tidymodels)
── Attaching packages ────────────────────────────────────── tidymodels 1.2.0 ──
✔ broom        1.0.7.9000     ✔ recipes      1.1.0.9000
✔ dials        1.3.0.9000     ✔ rsample      1.2.1.9000
✔ dplyr        1.1.4.9000     ✔ tibble       3.2.1.9032
✔ ggplot2      3.5.1.9000     ✔ tidyr        1.3.1.9000
✔ infer        1.0.7.9000     ✔ tune         1.2.1.9000
✔ modeldata    1.4.0.9000     ✔ workflows    1.1.4.9000
✔ parsnip      1.2.1.9003     ✔ workflowsets 1.1.0.9000
✔ purrr        1.0.2.9000     ✔ yardstick    1.3.1.9000
── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──
✖ purrr::discard()      masks scales::discard()
✖ dplyr::filter()       masks stats::filter()
✖ ggplot2::is.element() masks base::is.element()
✖ dplyr::lag()          masks stats::lag()
✖ recipes::step()       masks stats::step()
• Use suppressPackageStartupMessages() to eliminate package startup messages
> library(bonsai)
> library(sparsevctrs)
> library(QSARdata)
> library(lobstr)
> library(syrup)
Loading required package: bench
> 
> # ------------------------------------------------------------------------------
> 
> tidymodels_prefer()
> theme_set(theme_bw())
> options(pillar.advice = FALSE, pillar.min_title_chars = Inf)
> 
> # ------------------------------------------------------------------------------
> 
> data(caco)
> 
> caco_tbl <- 
+   full_join(caco_AtomPair, caco_PipelinePilot_FP, by = "Molecule") %>% 
+   as_tibble()
> 
> # Add outcome
> caco_tbl <- 
+   full_join(caco_tbl, caco_Outcome, by = "Molecule") %>% 
+   select(-Molecule) %>% 
+   mutate(Class = factor(as.character(Class), ordered = FALSE, levels = levels(Class)))
> 
> # ------------------------------------------------------------------------------
> 
> convert_to_sparse <- function(.data, threshold = 25, exclude = "class", verbose = FALSE) {
+   if (verbose) {
+     cli::cli_inform("Initial size: {format(lobstr::obj_size(.data))}")
+   }
+   num_vals <- map_int(.data, vctrs::vec_unique_count)
+   col_types <- map_chr(.data, ~ typeof(.x))
+   # fun fact typeof(factor) == "integer" yay!
+   convertable <- map_lgl(.data, ~ is.numeric(.x) | is.logical(.x) | is.character(.x))
+   
+   rm_cols <- names(num_vals) %in% exclude | !convertable
+   num_vals <- num_vals[!rm_cols]
+   col_types <- col_types[!rm_cols]
+   
+   cols_to_convert <- names(num_vals)[num_vals <= threshold]
+   types_to_convert <- col_types[num_vals <= threshold]
+   
+   tbl <- table(types_to_convert)
+   type_count <- paste0(names(tbl), " (", format(tbl, big.mark = ","), ")")
+   
+   if (verbose) {
+     cli::cli_inform("Columns to convert: {type_count}")
+   }
+   
+   for (.col in cols_to_convert) {
+     if (typeof(.data[[.col]]) == "integer") {
+       .data[[.col]] <- as_sparse_integer(.data[[.col]])
+     } else if (typeof(.data[[.col]]) == "double") {
+       .data[[.col]] <- as_sparse_double(.data[[.col]])
+     }
+   }
+   if (verbose) {
+     cli::cli_inform("Final size: {format(lobstr::obj_size(.data))}")
+   }
+   .data
+ }
> 
> caco_sprs <- convert_to_sparse(caco_tbl, threshold = 25)
> 
> # ------------------------------------------------------------------------------
> 
> caco_data <- caco_sprs
> 
> glmnet_prof_sprs <- syrup(
+   analysis_time_sprs <- system.time(
+     source("glmnet-caco/caco_glmnet.R")
+   ),
+   interval = 0.1
+ )
Error in UseMethod("mutate") : 
  no applicable method for 'mutate' applied to an object of class "NULL"
Calls: syrup -> mutate_pct_cpu -> <Anonymous>
Execution halted
